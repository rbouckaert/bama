<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood" version="2.0">
    

    <mergewith point='aux-sitemodel-panels'>
            <!-- site models -->
        <!-- gamma site model -->
        <!-- inputLabelMap='beast.evolution.sitemodel.BEASTModelTestSiteModel.mutationRate=Substitution Rate'-->
        <subtemplate id='BAMA: BEAST Aminoacid Model Averaging' class='beast.evolution.sitemodel.BAMAModelTestSiteModel' mainid='BAMA.s:$(n)'

			suppressInputs="beast.evolution.sitemodel.BAMAModelTestSiteModel.substModel,
beast.evolution.sitemodel.BAMAModelTestSiteModel.gammaCategoryCount,
beast.evolution.sitemodel.BAMAModelTestSiteModel.shape,
beast.evolution.sitemodel.BAMAModelTestSiteModel.proportionInvariant,
beast.evolution.sitemodel.BAMAModelTestSiteModel.hasInvariantSites,
beast.evolution.sitemodel.BAMAModelTestSiteModel.hasGammaRates,
beast.math.distributions.BMTPrior.x,
beast.math.distributions.BMTPrior.count,
beast.math.distributions.NucleotideRevJumpSubstModelRatePrior.substModel,
beast.math.distributions.NucleotideRevJumpSubstModelRatePrior.x,
beast.math.distributions.NucleotideRevJumpSubstModelRatePrior.modelIndicator,
beast.math.distributions.NucleotideRevJumpSubstModelRatePrior.distr"
			>
            <![CDATA[

        <stateNode id="BAMA_ModelIndicator.s:$(n)" spec="parameter.IntegerParameter" lower="0" upper="14">0</stateNode>
        <parameter id="BAMA_gammaShape.s:$(n)" name="stateNode">1.0</parameter>
        <parameter id="BAMA_ProportionInvariable.s:$(n)" lower="0.0" name="stateNode" upper="1.0">0.1</parameter>
        <stateNode id="BAMA_hasInvariableSites.s:$(n)" spec="parameter.IntegerParameter">1</stateNode>        
        <stateNode id="BAMA_hasGammaRates.s:$(n)" spec="parameter.IntegerParameter">1</stateNode>        

        <!-- frequencies estimation -->
        <stateNode id="BAMA_useExternalFreqs.s:$(n)" spec="parameter.BooleanParameter">false</stateNode>
        <stateNode id="BAMA_frequencies.s:$(n)" spec="parameter.RealParameter">0.25 0.25 0.25 0.25</stateNode>


        <distribution id="BAMA_GammaShapePrior.s:$(n)" spec="beast.math.distributions.BMTPrior" count="@BAMA_hasGammaRates.s:$(n)" x="@BAMA_gammaShape.s:$(n)">
                <Exponential id="Exponential.0" name="distr">
                    <parameter lower="0.0" name="mean" upper="0.0" estimate='false'>1.0</parameter>
                </Exponential>
	    </distribution>
	    
    	<distribution id="BAMA_PropInvariablePrior.s:$(n)" spec="beast.math.distributions.BMTPrior" count="@BAMA_hasInvariableSites.s:$(n)" x="@BAMA_ProportionInvariable.s:$(n)">
	    	<Beta name="distr" alpha="1.0" beta="4.0"/>
    	</distribution>

    	<prior id='BAMA_MutationRatePrior.s:$(n)' x='@BAMA_mutationRate.s:$(n)'><distr spec="OneOnX"/></prior>
            
	    <siteModel id="BAMA.s:$(n)" spec="beast.evolution.sitemodel.BAMAModelTestSiteModel" 
		    gammaCategoryCount="4" proportionInvariant="@BAMA_ProportionInvariable.s:$(n)" shape="@BAMA_gammaShape.s:$(n)"
		    hasGammaRates="@BAMA_hasGammaRates.s:$(n)" hasInvariantSites="@BAMA_hasInvariableSites.s:$(n)">
	        <parameter id="BAMA_mutationRate.s:$(n)" estimate="false" name="mutationRate">1.0</parameter>
                <substModel id="BAMA_substmodel.s:$(n)" spec="BAMAModel">
                    	<frequencies id="BAMA_empiricalFreqs.s:$(n)" spec="Frequencies" data="@$(n)"/>
                    	<useExternalFreqs idref="BAMA_useExternalFreqs.s:$(n)"/>
                    	<modelIndicator idref="BAMA_ModelIndicator.s:$(n)"/>
<model spec="BAMA_Blosum62" /><!--"Blosum62"/-->
<model spec="BAMA_CpREV"    /><!--"CpREV"/-->
<model spec="BAMA_DCMut"    /><!--"DCMut"/-->
<model spec="BAMA_Dayhoff"  /><!--"Dayhoff"/-->
<model spec="BAMA_HIVb"     /><!--"HIVb"/-->
<model spec="BAMA_HIVw"     /><!--"HIVw"/-->
<model spec="BAMA_JTT"      /><!--"JTT"/-->
<model spec="BAMA_LG"       /><!--"LG"/-->
<model spec="BAMA_MtArt"    /><!--"MtArt"/-->
<model spec="BAMA_MtREV"    /><!--"MtREV"/-->
<model spec="BAMA_MtMam"    /><!--"MtMam"/-->
<model spec="BAMA_RtREV"    /><!--"RtREV"/-->
<model spec="BAMA_VT"       /><!--"VT"/-->
<model spec="BAMA_WAG"      /><!--"WAG"/-->
                    </substModel>
	    </siteModel>
	
	
		<operator id="BAMA_hasGammaRatesFlipper.s:$(n)" spec="BMTBirthDeathOperator" count="@BAMA_hasGammaRates.s:$(n)" rates="@BAMA_gammaShape.s:$(n)" weight="0.1"/>
	    <operator id="BAMA_gammaShapeScaler.s:$(n)" spec="BMTScaleOperator" count="@BAMA_hasGammaRates.s:$(n)" parameter="@BAMA_gammaShape.s:$(n)" scaleFactor="0.5" weight="0.5"/>

		<operator id="BAMA_hasInvariableSitesFlipper.s:$(n)" spec="BMTBirthDeathOperator" count="@BAMA_hasInvariableSites.s:$(n)" rates="@BAMA_ProportionInvariable.s:$(n)" weight="0.1"/>
	    <operator id="BAMA_ProportionInvariableScaler.s:$(n)" spec="BMTScaleOperator" count="@BAMA_hasInvariableSites.s:$(n)" parameter="@BAMA_ProportionInvariable.s:$(n)" scaleFactor="0.5" weight="0.5"/>

        <operator id='BAMA_mutationRateScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@BAMA_mutationRate.s:$(n)"/>
            
	    <operator id="BAMA_ModelIndicatorUniformOperator.s:$(n)" spec="UniformOperator" parameter="@BAMA_ModelIndicator.s:$(n)" weight="3.0"/>
    	<operator id="BAMA_FreqsFlipOperator.s:$(n)" spec="BitFlipOperator" parameter="@BAMA_useExternalFreqs.s:$(n)" weight="0.1"/>

        <log id="BAMA_ActivePropInvariable.s:$(n)" spec='beast.util.Script' expression="BAMA_ProportionInvariable * BAMA_hasInvariableSites" argnames="BAMA_ProportionInvariable BAMA_hasInvariableSites">
	        <x idref="BAMA_ProportionInvariable.s:$(n)"/>
	        <x idref="BAMA_hasInvariableSites.s:$(n)"/>
        </log>
        <log id="BAMA_ActiveGammaShape.s:$(n)" spec='beast.util.Script' expression="BAMA_gammaShape * BAMA_hasGammaRates" argnames="BAMA_gammaShape BAMA_hasGammaRates">
	        <x idref="BAMA_gammaShape.s:$(n)"/>
	        <x idref="BAMA_hasGammaRates.s:$(n)"/>
        </log>



            ]]>

            <connect method="beast.app.beauti.SiteModelInputEditor.customConnector"/>

            <connect srcID='BAMA_ModelIndicator.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_gammaShape.s:$(n)'           targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n)) and BAMA_gammaShape.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_ProportionInvariable.s:$(n)'  targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n)) and BAMA_ProportionInvariable.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_hasInvariableSites.s:$(n)'        targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n)) and BAMA_hasInvariableSites.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_hasGammaRates.s:$(n)'            targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n)) and BAMA_hasGammaRates.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_useExternalFreqs.s:$(n)'            targetID='state' inputName='stateNode' if='inlikelihood(BAMA.s:$(n))'/>

            <connect srcID='$(n)'          targetID='BAMA_empiricalFreqs.s:$(n)' inputName='data' if='inlikelihood(BAMA.s:$(n))'/>

            <connect srcID='BAMA_MutationRatePrior.s:$(n)'         targetID='prior' inputName='distribution' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(BAMA_mutationRate.s:$(n)) and BAMA_mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_mutationRate.s:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(BAMA_mutationRate.s:$(n)) and BAMA_mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='BAMA_mutationRateScaler.s:$(n)'        targetID='mcmc' inputName='operator' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(BAMA_mutationRate.s:$(n)) and BAMA_mutationRate.s:$(n)/estimate=true'>Scales mutation rate of partition s:$(n)</connect>
            <connect srcID='BAMA_mutationRate.s:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(BAMA_mutationRate.s:$(n)) and BAMA_mutationRate.s:$(n)/estimate=true'/>
            
            <connect srcID='BAMA_GammaShapePrior.s:$(n)'           targetID='prior' inputName='distribution' if='inlikelihood(BAMA.s:$(n)) and BAMA_gammaShape.s:$(n)/estimate=true'>Prior on gamma shape parameter for partition s:$(n)</connect>
            <connect srcID='BAMA_PropInvariablePrior.s:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(BAMA.s:$(n)) and BAMA_ProportionInvariable.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>

            <connect srcID='BAMA_gammaShapeScaler.s:$(n)'          targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n)) and BAMA_gammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>
            <connect srcID='BAMA_ProportionInvariableScaler.s:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n)) and BAMA_ProportionInvariable.s:$(n)/estimate=true'>Scales proportion invariant of partition s:$(n)</connect>
            <connect srcID='BAMA_hasGammaRatesFlipper.s:$(n)'      targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n)) and BAMA_hasGammaRates.s:$(n)/estimate=true'>Switches gamma rates on/off of partition s:$(n)</connect>
            <connect srcID='BAMA_hasInvariableSitesFlipper.s:$(n)'  targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n)) and BAMA_hasInvariableSites.s:$(n)/estimate=true'>Switches invariant sites on/off of partition s:$(n)</connect>
            <connect srcID='BAMA_FreqsFlipOperator.s:$(n)'         targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n))'>Switches equal frequencies of partition s:$(n)</connect>
	    	<connect srcID="BAMA_ModelIndicatorUniformOperator.s:$(n)" targetID='mcmc' inputName='operator' if='inlikelihood(BAMA.s:$(n))'>Resersible jump of subst models for partition s:$(n)</connect>

            <connect srcID='BAMA_ModelIndicator.s:$(n)'            targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_gammaShape.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_ProportionInvariable.s:$(n)'       targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_hasGammaRates.s:$(n)'                 targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_hasInvariableSites.s:$(n)'             targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_ActivePropInvariable.s:$(n)'           targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_ActiveGammaShape.s:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>
            <connect srcID='BAMA_useExternalFreqs.s:$(n)'                 targetID='tracelog' inputName='log' if='inlikelihood(BAMA.s:$(n))'/>

            </subtemplate>
    </mergewith>

</beast>
